/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
void inversion(TreeNode* node)
{
    if(node==nullptr)return ;
    //swap the left and right children
     TreeNode* temp=node->left;
     node->left=node->right;
     node->right=temp;
     inversion(node->left);
     inversion(node->right);


}
public:
    TreeNode* invertTree(TreeNode* root) {
        if(root ==nullptr)return nullptr;
         inversion(root);     
         return root;  
    }
};
