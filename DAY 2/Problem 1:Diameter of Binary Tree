/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
int HeightsOfTree(TreeNode* node,int & maximum)
{
    if(node==nullptr)return 0;
     int leftHeight=HeightsOfTree(node->left,maximum);
    int rightHeight=HeightsOfTree(node->right,maximum);
    maximum=max(maximum,leftHeight+rightHeight);
    return (1+max(leftHeight,rightHeight));
}
public:
    int diameterOfBinaryTree(TreeNode* root) {
        int maximum=0;
        HeightsOfTree(root,maximum);
        return maximum;
    }
};
